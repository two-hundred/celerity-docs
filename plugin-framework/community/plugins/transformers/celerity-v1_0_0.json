{
  "id": "celerity",
  "displayName": "Celerity",
  "version": "1.0.0",
  "protocolVersion": 1,
  "transformName": "celerity-2025-04-01",
  "description": "Celerity application transformer for the Deploy Engine containing the abstract resources that power Celerity application primitives.",
  "author": "Two Hundred Cloud Services Ltd",
  "repository": "https://github.com/two-hundred/celerity-trasformer-celerity",
  "config": {},
  "abstractResources": [
    {
      "type": "celerity/handler",
      "label": "Celerity Handler",
      "summary": "An abstract resource for managing a Celerity application handler.",
      "description": "The abstract resource type used to define a [Celerity Handler](https://www.celerityframework.io/docs/applications/resources/celerity-handler).",
      "specification": {
        "schema": {
          "type": "object",
          "label": "CelerityHandlerDefinition",
          "description": "The definition of a Celerity application handler.",
          "attributes": {
            "functionName": {
              "type": "string",
              "description": "The name of the handler in the target environment.",
              "computed": false,
              "nullable": false,
              "examples": ["ProcessOrders"]
            },
            "id": {
              "type": "string",
              "description": "The unique ID of the handler in the target environment.",
              "computed": true,
              "nullable": false
            },
            "nestedObject": {
              "type": "object",
              "description": "A nested object definition to test out rendering.",
              "label": "NestedObjectDefinition",
              "attributes": {
                "nestedField": {
                  "type": "string",
                  "description": "A nested field.",
                  "computed": false,
                  "nullable": false
                },
                "nestedField2": {
                  "type": "object",
                  "description": "A deeply nested object.",
                  "label": "DeeplyNestedObjectDefinition",
                  "attributes": {
                    "deeplyNestedField": {
                      "type": "string",
                      "description": "A deeply nested field.",
                      "computed": false,
                      "nullable": false
                    }
                  },
                  "required": ["deeplyNestedField"],
                  "default": null,
                  "nullable": false,
                  "computed": false
                }
              },
              "required": ["nestedField"],
              "default": null,
              "nullable": false,
              "computed": false
            },
            "unionField": {
              "type": "union",
              "description": "A union field definition to test out rendering.",
              "oneOf": [
                {
                  "type": "string",
                  "description": "A string value."
                },
                {
                  "type": "integer",
                  "description": "An integer value."
                },
                {
                  "type": "array",
                  "description": "An array value.",
                  "items": {
                    "type": "object",
                    "label": "UnionNestedDefinition",
                    "description": "A definition nested in a union field.",
                    "attributes": {
                      "unionNestedField": {
                        "type": "string",
                        "description": "A union nested field.",
                        "computed": false,
                        "nullable": false
                      }
                    },
                    "required": ["unionNestedField"]
                  }
                }
              ],
              "nullable": false,
              "computed": false,
              "examples": ["string", 123, [{ "unionNestedField": "value" }]]
            },
            "arrayField": {
              "type": "array",
              "description": "An array field definition to test out rendering.",
              "items": {
                "type": "string",
                "description": "An array item."
              },
              "nullable": false,
              "computed": false,
              "examples": [["item1", "item2"]]
            },
            "mapField": {
              "type": "map",
              "description": "A map field definition to test out rendering.",
              "mapValues": {
                "type": "string",
                "description": "A map value."
              },
              "nullable": false,
              "computed": false,
              "examples": [{ "key1": "value1", "key2": "value2" }]
            }
          },
          "required": ["functionName"],
          "default": null,
          "nullable": false,
          "computed": false
        },
        "idField": "arn"
      },
      "examples": [
        "```yaml\nresources:\n - type: celerity/handler\n   name: ProcessOrders\n   properties:\n     functionName: ProcessOrders\n```",
        "```yaml\nresources:\n - type: celerity/handler\n   name: ProcessOrders\n   properties:\n     functionName: ProcessOrders\n     id: arn:aws:lambda:us-west-2:123456789012:function:ProcessOrders\n```",
        "Some example with `inline code`."
      ],
      "canLinkTo": ["celerity/datastore", "celerity/bucket", "celerity/queue"]
    },
    {
      "type": "celerity/datastore",
      "label": "Celerity Datastore",
      "summary": "A resource for managing a NoSQL data store.",
      "description": "The resource type used to define a NoSQL data store used by a Celerity application.",
      "specification": {
          "schema": {
              "type": "object",
              "label": "CelerityDatastoreDefinition",
              "description": "The definition of a NOSQL data store.",
              "attributes": {
                  "tableName": {
                      "type": "string",
                      "description": "The name of the NoSQL data store/table for the target environment.",
                      "computed": false,
                      "nullable": false,
                      "examples": ["ProcessOrders"]
                  },
                  "id": {
                      "type": "string",
                      "description": "The ID for the NoSQL data store in the target environment.",
                      "computed": true,
                      "nullable": false
                  }
              },
              "required": ["tableName"],
              "default": null,
              "nullable": false,
              "computed": false
          },
          "idField": "id"
      },
      "examples": [
          "```yaml\nresources:\n - type: celerity/datastore\n   name: ProcessOrders\n   properties:\n     tableName: ProcessOrders\n```",
          "```yaml\nresources:\n - type: celerity/datastore\n   name: ProcessOrders\n   properties:\n     tableName: ProcessOrders\n     id: arn:aws:dynamodb:us-west-2:123456789012:table/ProcessOrders\n```"
      ],
      "canLinkTo": []
  }
  ]
}
